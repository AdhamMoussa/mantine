(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[66821],{79604:function(o,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/use-clipboard",function(){return n(23862)}])},23862:function(o,e,n){"use strict";n.r(e),n.d(e,{default:function(){return u}});var i=n(52322),r=n(45392),t=n(17115),c=n(78574);let d=`
import { Button } from '@mantine/core';
import { useClipboard } from '@mantine/hooks';

function Demo() {
  const clipboard = useClipboard({ timeout: 500 });

  return (
    <Button
      color={clipboard.copied ? 'teal' : 'blue'}
      onClick={() => clipboard.copy('Hello, world!')}
    >
      {clipboard.copied ? 'Copied' : 'Copy'}
    </Button>
  );
}`,l={type:"code",code:d,component:function(){let o=(0,c.V)({timeout:500});return(0,i.jsx)(t.z,{color:o.copied?"teal":"blue",onClick:()=>o.copy("Hello, world!"),children:o.copied?"Copied":"Copy"})},centered:!0};var s=n(79016),a=n(33638);let h=(0,s.A)(a.us.useClipboard);function p(o){let e={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...o.components},{Demo:n}=e;return n||function(o,e){throw Error("Expected "+(e?"component":"object")+" `"+o+"` to be defined: you likely forgot to import, pass, or provide it.")}("Demo",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"use-clipboard"})," hook provides interface to work with ",(0,i.jsx)(e.code,{children:"navigator.clipboard"}),":"]}),"\n",(0,i.jsx)(n,{data:l}),"\n",(0,i.jsx)(e.h2,{id:"navigatorclipboard-limitations",children:"navigator.clipboard limitations"}),"\n",(0,i.jsxs)(e.p,{children:["Due to security reasons ",(0,i.jsx)(e.code,{children:"use-clipboard"})," hook will not work in iframes and may not work with local files opened with ",(0,i.jsx)(e.code,{children:"file://"})," protocol\n(hook will work fine with local websites that are using ",(0,i.jsx)(e.code,{children:"http://"})," protocol). You can learn more about ",(0,i.jsx)(e.code,{children:"navigator.clipboard"})," ",(0,i.jsx)(e.a,{href:"https://web.dev/async-clipboard/",children:"here"}),"."]}),"\n",(0,i.jsx)(e.h2,{id:"api",children:"API"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"use-clipboard"})," hook accepts one argument ",(0,i.jsx)(e.code,{children:"options"})," in which copied status timeout duration is defined (defaults to ",(0,i.jsx)(e.code,{children:"2000"}),").\nHook returns object with properties:"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"copy"})," – function to copy value to the clipboard"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"copied"})," – value that indicates that ",(0,i.jsx)(e.code,{children:"copy"})," handler was called less than ",(0,i.jsx)(e.code,{children:"options.timeout"})," ms ago"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"reset"})," – function to clear timeout and reset ",(0,i.jsx)(e.code,{children:"copied"})," to ",(0,i.jsx)(e.code,{children:"false"})]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"error"})," – contains ",(0,i.jsx)(e.code,{children:"Error"})," object if something goes wrong"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"definition",children:"Definition"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-tsx",children:"function useClipboard(\n  options: { timeout: number } = { timeout: 2000 }\n): {\n  copy: (valueToCopy: any) => void;\n  reset: () => void;\n  error: Error;\n  copied: boolean;\n};\n"})})]})}function u(){let o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,i.jsx)(h,{...o,children:(0,i.jsx)(p,{...o})})}}},function(o){o.O(0,[57938,17454,47747,49774,92888,40179],function(){return o(o.s=79604)}),_N_E=o.O()}]);